.divider {
  display: flex;
  align-items: center;
  text-align: center;
  margin: 20px 0;
  color: #bbb;
}

.divider::before,
.divider::after {
  content: "";
  flex: 1;
  border-top: 1px solid #bbb;
  margin: 0 10px;
}

.divider span {
  padding: 5px 10px;
  border: 1px solid #bbb;
  border-radius: 10px;
  font-weight: bold;
  background-color: #fff;
}

.bg-image{
  background-image: url('../../../helpers/svg/background.svg');
  background-repeat: no-repeat;
  background-size: cover;
  height: 100vh;
}

.bg-image-s{
  background-image: url('../../../helpers/svg/background.svg');
  background-repeat: no-repeat;
  background-size: cover;
  height: 130vh;
}

.logo{
  width: 250px !important;
}
/* otp-input.component.scss */
.otp-container {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 20px 0;
}

.otp-input-container {
  display: flex;
  gap: 12px;
}

.otp-input {
  width: 50px;
  height: 50px;
  font-size: 24px;
  border: 1px solid #ccc;
  border-radius: 4px;
  text-align: center;
  font-weight: 500;
  color: #333;
  background-color: #fff;
  transition: all 0.2s ease;

  &:focus {
    outline: none;
    border-color: #4285f4;
    box-shadow: 0 0 0 2px rgba(66, 133, 244, 0.25);
  }

  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  /* Firefox */
  &[type=number] {
    -moz-appearance: textfield;
  }
}

/* Add animation when input gets filled */
.otp-input.ng-valid {
  border-color: #34a853;
  background-color: rgba(52, 168, 83, 0.05);
}

/* Error state styling */
.otp-input.ng-invalid.ng-dirty {
  border-color: #ea4335;
  background-color: rgba(234, 67, 53, 0.05);
}

/* Responsive styles */
@media (max-width: 480px) {
  .otp-input {
    width: 40px;
    height: 40px;
    font-size: 20px;
  }

  .otp-input-container {
    gap: 8px;
  }
}

